# -*- cg-pre-pipe: "apertium -f none -d . nob-nno-biltrans"; cg-command: "~/src/ap/vislcg3/src/cg-proc"; cg-extra-args: "-t -g -n -z -w apertium-nno-nob.nob-nno.biprefs.rlx # " -*-

# GPL-2+
#
# Bilingual dictionary preference rules.
#
# We expect stream variables to set or remove variables with naming
# scheme "VAR:default_override", where "override" is chosen if set,
# otherwise "default" is chosen. For any "default", there may be
# multiple possible "override"''s.

DELIMITERS = ".";

LIST m = m ;
LIST f = f ;
LIST nt = nt ;

# General format of rules:
# SELECT:default_other   ("other"i) IF (0 ("default"i) + (VAR:default_other));
# REMOVE:default_default ("other"i) IF (0 ("default"i));

# words that default to forskjell, but can be overridden to skilnad
LIST lm_skilnad = ".*(skilnad)"ri "til skilnad frå"i;
SELECT:forskjell_skilnad lm_skilnad IF (0 (VAR:forskjell_skilnad.syn));
REMOVE:forskjell_skilnad lm_skilnad;

# words that default to samd//semje, but can be overridden to einig/einigheit
LIST lm_einig = ".*(einig|einigheit)"ri;
SELECT:samd_einig lm_einig IF (0 (VAR:samd_einig.syn));
REMOVE:samd_einig lm_einig;

# words that default to oppmode/oppmoding, but can be overridden to oppfordre/oppfordring
LIST lm_oppfordre = "oppfordre"i "oppfordring"i;
SELECT:oppmode_oppfordre lm_oppfordre IF (0 (VAR:oppmode_oppfordre.syn));
REMOVE:oppmode_oppfordre lm_oppfordre;

LIST lm_skap = ".*skap"ri;
SELECT:bodskapen_bodskapet.n.m2nt lm_skap + nt IF (0 (VAR:bodskapen_bodskapet.n.m2nt));
REMOVE:bodskapen_bodskapet.n.m2nt lm_skap + nt;

# words that default to <f>, but can be overridden to <m>:
LIST lova_loven_nouns = ".*(ape|blokk|bøye|grad|grunne|kasse|klage|krise|kulde|lampe|lov|maskin|nytte|olje|pinse|potet|prøve|påske|scene|sinke|ørn|anretning|demning|festning|forlegning|legning|pakning|strekning)"ri;
SELECT:compounds m + lova_loven_nouns IF (0 (VSTR:VAR:lova_loven.n.f2m=/\\b$1\\b/r)) ;
SELECT:lm_filter m + ("<(.+)>"r)    IF (0 (VSTR:VAR:lova_loven.n.f2m=/\\b$1\\b/r)) ;
SELECT:no_filter m + lova_loven_nouns IF (0 (VAR:lova_loven.n.f2m=*));
REMOVE:unset     m + lova_loven_nouns;

# words that default to <m>, but can be overridden to <f>:
LIST banen_bana_nouns = ".*(art|bane|bete|beskjed|dialekt|dump|farge|flamme|kai|klasse|krabbe|kunst|larve|meis|pakke|persille|plante|takt|tekst|tillit|stamme|svikt|synagoge|takk|tale|trost|bygning|doning|kledning|ladning|leidning|munning|pasning|rydning)"ri;
SELECT:compounds f + banen_bana_nouns IF (0 (VSTR:VAR:banen_bana.n.m2f=/\\b$1\\b/r)) ;
SELECT:lm_filter f + ("<(.+)>"r)    IF (0 (VSTR:VAR:banen_bana.n.m2f=/\\b$1\\b/r)) ;
SELECT:no_filter f + banen_bana_nouns IF (0 (VAR:banen_bana.n.m2f=*));
REMOVE:unset     f + banen_bana_nouns;

# words that default to <nt>, but can be overridden to <m>:
LIST minuttet_minutten_nouns = ".*(minutt|sekund)"ri;
SELECT:compounds m + minuttet_minutten_nouns IF (0 (VSTR:VAR:minuttet_minutten.n.nt2m=/\\b$1\\b/r)) ;
SELECT:lm_filter m + ("<(.+)>"r)    IF (0 (VSTR:VAR:minuttet_minutten.n.nt2m=/\\b$1\\b/r)) ;
SELECT:no_filter m + minuttet_minutten_nouns IF (0 (VAR:minuttet_minutten.n.nt2m=*));
REMOVE:unset     m + minuttet_minutten_nouns;

# words that default to suffix -sel (<m> or <nt>), but can be overridden to -sle (<f>)
# fixed compounds (-sels* / -sle*) handled in nno.dix
LIST redsel_redsle_nouns = ".*(blygsel|drygsel|høyrsel|køyrsel|ferdsel|førsel|hengsel|lengsel|redsel|skremsel|trengsel|tyngsel|vigsel)"ri;
SELECT:redsel_redsle f + redsel_redsle_nouns IF (0 (VAR:redsel_redsle.kons-sel2sle));
REMOVE:unset         f + redsel_redsle_nouns;

# words that default to suffix -sle (<f>), but can be overridden to -sel (<m>)
LIST gløymsle_gløymsel_nouns = ".*(gløymsel|gøymsel)"ri;
SELECT:gløymsle_gløymsel m + gløymsle_gløymsel_nouns IF (0 (VAR:gløymsle_gløymsel.kons-sel2sle));
REMOVE:unset         m + gløymsle_gløymsel_nouns;

LIST lm_bevisst = ".*bevisst"ri ".*bevisstheit"ri "bevisstlaus"i "bevisstløyse"i;
SELECT:medviten_bevisst lm_bevisst IF (0 (VAR:medviten_bevisst.syn));
REMOVE:medviten_bevisst lm_bevisst;

LIST lm_myndigheit = ".*myndigheit"ri "myndigheit.*"ri;
SELECT:styresmakt_myndigheit lm_myndigheit IF (0 (VAR:styresmakt_myndigheit.syn));
REMOVE:styresmakt_myndigheit lm_myndigheit;

LIST lm_anbefale = "anbefale"ri ".*anbefalt"ri ".*anbefaling"ri "anbefaling.*"ri;
SELECT:tilrå_anbefale lm_anbefale IF (0 (VAR:tilrå_anbefale.syn));
REMOVE:tilrå_anbefale lm_anbefale;

# override tryggleik, trygging, not sikring, tryggleik (trygghet); 
# keeps official names: Tryggingsrådet, Politiets tryggingsteneste.
LIST lm_sikkerheit = ".*sikkerheit"ri "sikkerheit.*"ri ".*sikkerheit.*"ri;
SELECT:tryggleik_sikkerheit lm_sikkerheit IF (0 (VAR:tryggleik_sikkerheit.syn));
REMOVE:tryggleik_sikkerheit lm_sikkerheit;

LIST lm_andlet = ".*andlet"ri "andlet.*"ri;
SELECT:ansikt_andlet lm_andlet IF (0 (VAR:ansikt_andlet.syn));
REMOVE:ansikt_andlet lm_andlet;

SELECT:motsetning_motsetnad  ("motsetnad"i) IF (0 ("motsetning"i) + (VAR:motsetning_motsetnad));
REMOVE:motsetning_motsetning ("motsetnad"i) IF (0 ("motsetning"i));

LIST lm_kvefs = ".*kvefs"ri "kvefs.*"ri;
SELECT:veps_kvefs lm_kvefs IF (0 (VAR:veps_kvefs.syn));
REMOVE:veps_kvefs lm_kvefs;

SELECT:itilfelle_ifall  ("i fall"i) IF (0 ("i tilfelle"i) + (VAR:itilfelle_ifall));
REMOVE:itilfelle_itilfelle ("i fall"i) IF (0 ("i tilfelle"i));

SELECT:blomster_blome  ("blome"i) IF (0 ("blomster"i) + (VAR:blomster_blome));
REMOVE:blomster_blomster ("blome"i) IF (0 ("blomster"i));

SELECT:derfor_difor  ("difor"i) IF (0 ("derfor"i) + (VAR:derfor_difor));
REMOVE:derfor_derfor ("difor"i) IF (0 ("derfor"i));

SELECT:verken_korkje  ("korkje"i) IF (0 ("verken"i) + (VAR:verken_korkje));
REMOVE:verken_verken ("korkje"i) IF (0 ("verken"i));

SELECT:kvifor_korfor  ("korfor"i) IF (0 ("kvifor"i) + (VAR:kvifor_korfor.syn));
REMOVE:kvifor_kvifor ("korfor"i) IF (0 ("kvifor"i));

SELECT:blant_mellom  ("mellom"i) IF (0 ("blant"i) + (VAR:blant_mellom.syn));
REMOVE:blant_blant ("mellom"i) IF (0 ("blant"i));

SELECT:mellom_blant  ("blant anna"i) IF (0 ("mellom anna"i) + (VAR:mellom_blant.syn));
REMOVE:mellom_mellom ("blant anna"i) IF (0 ("mellom anna"i));

SELECT:begge_båe ("båe"i) IF (0 ("begge"i) + (VAR:begge_båe.syn));
REMOVE:begge_begge   ("båe"i) IF (0 ("begge"i));

SELECT:lagnad_skjebne ("skjebne"i) IF (0 ("lagnad"i) + (VAR:lagnad_skjebne.syn));
REMOVE:lagnad_lagnad   ("skjebne"i) IF (0 ("lagnad"i));

LIST lm_nøgd = "nøgd"i "misnøgd"i;
SELECT:fornøgd_nøgd lm_nøgd IF (0  (VAR:fornøgd_nøgd.syn));
REMOVE:fornøgd_fornøgd lm_nøgd;

SELECT:framfor_framføre ("framføre"i) IF (0 ("framfor"i) + (VAR:framfor_framføre.syn));
REMOVE:framfor_framfor   ("framføre"i) IF (0 ("framfor"i));

LIST lm_bekrefte = "bekrefte"i "bekreftande"i "bekrefting"i "ubekrefta"i "foreldrebekrefting"i "totrinnsbekrefting"i;
SELECT:stadfeste_bekrefte lm_bekrefte IF (0  (VAR:stadfeste_bekrefte.syn));
REMOVE:bekrefte_bekrefte lm_bekrefte;

SELECT:hos_hja ("hjå"i) IF (0 ("hos"i) + (VAR:hos_hjå.syn));
REMOVE:hos_hos   ("hjå"i) IF (0 ("hos"i));

SELECT:kvar_kor ("kor"i) IF (0 ("kvar"i) + (VAR:kvar_kor.syn));
# Otherwise let lrx rules decide. One can always use "kor" in any
# context (if VAR:kvar_kor), but it's not possible to use "kvar" in
# every context.

SELECT:halde-fram_fortsetje  ("fortsetje"i) IF (0 ("halde# fram"i) + (VAR:halde-fram_fortsetje.syn));
REMOVE:halde-fram_halde-fram ("fortsetje"i) IF (0 ("halde# fram"i));
SELECT:halde-fram_fortsetje  ("fortsetjing"i) IF (0 ("framhald"i)  + (VAR:halde-fram_fortsetje.syn));
REMOVE:halde-fram_halde-fram ("fortsetjing"i) IF (0 ("framhald"i));

SELECT:også_og ("òg"i) IF (0 ("også"i) + (VAR:også_og.syn));
REMOVE:også_også   ("òg"i) IF (0 ("også"i));

LIST lm_begynne = "begynne"i "begynning"i "begynnar"i "nybegynnar"i "begynnande"i "påbegynne"i;
SELECT:byrje_begynne  lm_begynne IF (0 (VAR:byrje_begynne.syn));
REMOVE:byrje_byrje lm_begynne;

LIST lm_eksempel = "eksempel"i "for eksempel"i;
SELECT:døme_eksempel  lm_eksempel IF (0 (VAR:døme_eksempel.syn));
REMOVE:døme_døme lm_eksempel;

LIST lm_tyde = "tyde"i "tyding"i;
SELECT:bety_tyde  lm_tyde IF (0 (VAR:bety_tyde.syn));
REMOVE:bety_bety lm_tyde;

SELECT:førebels_foreløpig  ("foreløpig"i) IF (0 ("førebels"i) + (VAR:førebels_foreløpig.syn));
REMOVE:førebels_førebels ("foreløpig"i) IF (0 ("førebels"i));

SELECT:røyndom_røynd  ("røynd"i) IF (0 ("røyndom"i) + (VAR:røyndom_røynd));
REMOVE:røyndom_røyndom ("røynd"i) IF (0 ("røyndom"i));

SELECT:røyndom_verkelegheit ("verkelegheit") IF (0 ("røyndom"i) + (VAR:røyndom_verkelegheit));
REMOVE:røyndom_røyndom ("verkelegheit") IF (0 ("røyndom"i));

### Må eventuelt disambiguerast: beskrive -> skildre, forklare, klarleggje, gjere greie for, karakterisere, omtale o.l.
### Valet bør også omfatte substantiv: beskriving -> skildring, forklaring, klargjering, utgreiing, skisse o.l.
# SELECT:beskrive_skildre  ("skildre"i) IF (0 ("beskrive"i) + (VAR:beskrive_skildre));
# REMOVE:beskrive_beskrive ("skildre"i) IF (0 ("beskrive"i));

# Plain "makk" (not in a lexicalised compound) is "<mark¹>" (nob analysis, treated like form), while "børstemark" etc. has no superscript ¹
SELECT:mark_makk  ("makk"i) IF (0 ("<mark¹>"i) + (VAR:mark_makk.syn));
REMOVE:mark_mark ("makk"i) IF (0 ("<mark¹>"i));
LIST lm_mark = ".+mark"ri ;
LIST lm_makk = ".+makk"ri ;
SELECT:mark_makk lm_makk IF (0 lm_mark + (VAR:mark_makk));
REMOVE:mark_mark lm_makk IF (0 lm_mark);

SELECT:nærast_nærmast  ("nærmast"i) IF (0 ("nærast"i) + (VAR:nærast_nærmast.stav));
REMOVE:nærast_nærast ("nærmast"i) IF (0 ("nærast"i));

LIST lm_kross = ".*kross"ri;
SELECT:kors_kross lm_kross + m IF (0 (VAR:kors_kross.stav));
REMOVE:kors_kors  lm_kross + m;
# kors→kross happens in nno.dix when not ending a noun:
SELECT:kors_kross ("korsferd"i) IF (0 ("korstog"i) + (VAR:kors_kross.stav));
REMOVE:kors_kors  ("korsferd"i) IF (0 ("korstog"i));

SELECT:oversikt_oversyn  ("oversyn"i) IF (0 ("oversikt"i) + (VAR:oversikt_oversyn.syn));
REMOVE:oversikt_oversikt ("oversyn"i) IF (0 ("oversikt"i));

LIST lm_mørke = ".*mørker"ri;
SELECT:mørke_mørker.stav lm_mørke + nt IF (0 (VAR:mørke_mørker.stav));
REMOVE:mørke_mørke.stav lm_mørke + nt;

LIST lm_avl = "husdyral" "bial" "dronningal" "feal" "fiskeal" "fjørfeal" "forsøksal" "frøavl" "griseal" "hesteal" "kryssal" "reveal" "saual" "saueal" "seminal" "smieal" "svineal" "fruktal" "geital" "geiteal" ;
SELECT:avl_al.stav ("al"i) IF (0 ("avl"i) + (VAR:avl_al.stav));
REMOVE:avl_avl.stav ("al"i) IF (0 ("avl"i));
SELECT:avl_al.stav lm_avl IF (0 (VAR:avl_al.stav));
REMOVE:avl_avl.stav lm_avl;

SELECT:avgjerd_avgjersle.stav  ("avgjersle"i) IF (0 ("avgjerd"i) + (VAR:avgjerd_avgjersle.stav));
REMOVE:avgjerd_avgjerd.stav ("avgjersle"i) IF (0 ("avgjerd"i));

LIST lm_røyste = ".*røyste"ri ".*røyst"ri "røyst.*"ri ".*røysting"ri "røysting.*"ri "samrøystes"i;
SELECT:stemme_røyste lm_røyste IF (0 (VAR:stemme_røyste.syn));
REMOVE:stemme_røyste lm_røyste;

LIST lm_attfortelje = "attfortelje"i "attforteljing"i "fortelje# att"i;
SELECT:gjenfortelje_attfortelje lm_attfortelje IF (0 ("gjenfortelje"i) + (VAR:gjenfortelje_attfortelje.syn));
REMOVE:gjenfortelje_attfortelje lm_attfortelje IF (0 ("gjenfortelje"i));

SELECT:samtidig_samstundes ("samstundes"i) IF (0 ("samtidig"i) + (VAR:samtidig_samstundes.syn));
REMOVE:samtidig_samtidig   ("samstundes"i) IF (0 ("samtidig"i));

SELECT:forslag_framlegg ("framlegg"i) IF (0 ("forslag"i) + (VAR:forslag_framlegg.syn));
REMOVE:forslag_forslag   ("framlegg"i) IF (0 ("forslag"i));

SELECT:etterspurnad_etterspørsel ("etterspørsel"i) IF (0 ("etterspurnad"i) + (VAR:etterspurnad_etterspørsel.syn));
REMOVE:etterspurnad_etterspurnad   ("etterspørsel"i) IF (0 ("etterspurnad"i));

SELECT:ramme_råke ("råke"i) IF (0 ("ramme"i) + (VAR:ramme_råke.syn));
REMOVE:ramme_ramme   ("råke"i) IF (0 ("ramme"i));

SELECT:vise_syne ("syne.*"ri) IF (0 ("vise.*"ri) + (VAR:vise_syne.syn));
REMOVE:vise_syne ("syne.*"ri) IF (0 ("vise.*"ri));

SELECT:førebu_seg_bu_seg ("bu# seg"i) IF (0 ("førebu# seg"i) + (VAR:førebu_seg_bu_seg));
REMOVE:førebu_seg_førebu_seg ("bu# seg"i) IF (0 ("førebu# seg"i));

LIST lm_tinge = "tinging"i "avtinging"i "tingingsside"i "timetinging"i "tingingsdrap"i "tingingsverk"i "tingingstjuveri"i "tingingsvare"i "avtingingsforsikring"i "førehandstinging"i "spesialtinging"i "avtinge"i "førehandstinge"i "tinge"i;
SELECT:bestille_tinge  lm_tinge IF (0 (VAR:bestille_tinge.syn));
REMOVE:bestille_bestille lm_tinge;

LIST lm_lækjar = "lækjar"i "berrfotlækjar"i "skoletannlækjar"i "skuletannlækjar"i "tannlækjar"i "anestesilækjar"i "assistentlækjar"i "avdelingslækjar"i "barnelækjar"i "bedriftslækjar"i "distriktslækjar"i "distriktstannlækjar"i "dyrlækjar"i "fastlækjar"i "fylkeslækjar"i "hudlækjar"i "huslækjar"i "livlækjar"i "naturlækjar"i "overlækjar"i "reservelækjar"i "sesjonslækjar"i "skipslækjar"i "allmennlækjar"i "smittevernlækjar"i "sjelelækjar"i "stadslækjar"i "augnelækjar"i "sjukehuslækjar"i "landlækjar"i "kommunelækjar"i "skulelækjar"i "lækje"i "lækjarassistert"i "lækjarbehandling"i "lækjardekking"i "lækjarerklæring"i "lækjarhjelp"i "lækjemiddelassistert"i "lækjarpraksis"i "lækjarråd"i "lækjarstilling"i "lækjarvakt"i "lækjevitskap"i "lækjande"i "lækjarambulanse"i "lækjarattest"i "lækjarbehandling"i "lækjarbesøk"i "lækjarbok"i "lækjaretisk"i "lækjarhjelp"i "lækjarhonorar"i "lækjarkontor"i "lækjarmeld"i "lækjarpraksis"i "lækjarroman"i "lækjarråd"i "lækjarsekretær"i "lækjarsenter"i "lækjarstand"i "lækjarstilling"i "lækjartilsyn"i "lækjartime"i "lækjarundersøking"i "lækjarvakt"i "lækjarvisitt"i "lækjekunst"i "lækjemiddel"i "lækjemiddelassistert"i "lækjemiddelindustri"i "lækjeplante"i "lækjevitskap"i;
SELECT:lege_lækjar  lm_lækjar IF (0 (VAR:lege_lækjar.syn));
REMOVE:lege_lege lm_lækjar;

SELECT:ankel_okle ("okle"i) IF (0 ("ankel"i) + (VAR:ankel_okle.syn));
REMOVE:ankel_ankel   ("okle"i) IF (0 ("ankel"i));

SELECT:nød_naud.dift-ø2au ("naudsynt"i) IF (0 ("nødvendig"i) + (VAR:nød_naud.dift-ø2au));
REMOVE:nød_naud.dift-ø2au ("naudsynt"i) IF (0 ("nødvendig"i));

SELECT:nød_naud.dift-ø2au ("ikkje-naudsynt"i) IF (0 ("ikkje-nødvendig"i) + (VAR:nød_naud.dift-ø2au));
REMOVE:nød_naud.dift-ø2au ("ikkje-naudsynt"i) IF (0 ("ikkje-nødvendig"i));

SELECT:nød_naud.dift-ø2au ("livsnaudsynt"i) IF (0 ("livsnødvendig"i) + (VAR:nød_naud.dift-ø2au));
REMOVE:nød_naud.dift-ø2au ("livsnaudsynt"i) IF (0 ("livsnødvendig"i));

SELECT:nød_naud.dift-ø2au ("uturvande"i) IF (0 ("unødvendig"i) + (VAR:nød_naud.dift-ø2au));
REMOVE:nød_naud.dift-ø2au ("uturvande"i) IF (0 ("unødvendig"i));

SELECT:nød_naud.dift-ø2au ("naudsyn"i) IF (0 ("nødvendigheit"i) + (VAR:nød_naud.dift-ø2au));
REMOVE:nød_naud.dift-ø2au ("naudsyn"i) IF (0 ("nødvendigheit"i));

SELECT:nød_naud.dift-ø2au ("naudsynleg"i) IF (0 ("nødvendigvis"i) + (VAR:nød_naud.dift-ø2au));
REMOVE:nød_naud.dift-ø2au ("naudsynleg"i) IF (0 ("nødvendigvis"i));

SELECT:nød_naud.dift-ø2au ("naudsynleggjere"i) IF (0 ("nødvendiggjere"i) + (VAR:nød_naud.dift-ø2au));
REMOVE:nød_naud.dift-ø2au ("naudsynleggjere"i) IF (0 ("nødvendiggjere"i));

SELECT:dødeleg_døyeleg.dift-ø2øy ("døying"i) IF (0 ("dødelegheit"i) + (VAR:dødeleg_døyeleg.dift-ø2øy));
REMOVE:dødeleg_døyeleg.dift-ø2øy ("døying"i) IF (0 ("dødelegheit"i));

SELECT:dødeleg_døyeleg.dift-ø2øy ("barnedøying"i) IF (0 ("barnedødelegheit"i) + (VAR:dødeleg_døyeleg.dift-ø2øy));
REMOVE:dødeleg_døyeleg.dift-ø2øy ("barnedøying"i) IF (0 ("barnedødelegheit"i));

SELECT:Oskeladden_Askeladden.vok-a2o ("Askeladden"i) IF (0 ("Oskeladden"i) + (VAR:oske_aske.vok-a2o));
REMOVE:Oskeladden_Askeladden.vok-a2o ("Askeladden"i) IF (0 ("Oskeladden"i));

SELECT:tek_tar.vb-en2tt ("unntatt"i) IF (0 ("unnateken"i) + (VAR:tek_tar.vb-en2tt));
REMOVE:tek_tar.vb-en2tt ("unntatt"i) IF (0 ("unnateken"i));

SELECT:storleik_størrelse ("størrelse"i) IF (0 ("storleik"i) + (VAR:storleik_størrelse.syn));
REMOVE:storleik_størrelse ("størrelse"i) IF (0 ("storleik"i));

LIST lm_nyheit = "nyhende"i "nyhendebyrå"i "nyhendebyrået AP"i "nyhendeanker"i "nyhendedriven"i;
SELECT:nyheit_nyhende lm_nyheit IF (0 (VAR:nyheit_nyhende.syn));
REMOVE:nyheit_nyhende lm_nyheit;

# DEBUG NOTES:
# $ echo '[<STREAMCMD:SETVAR:forskjell_skilnad,samd_einig>]^forskjell<n><m><sg><ind>/forskjell<n><m><sg><ind>/skilnad<n><m><sg><ind>$ ^enig<adj><sint><pst><nt><sg><ind>/samd<adj><sint><pst><nt><sg><ind>/einig<adj><sint><pst><nt><sg><ind>$' | ~/src/ap/vislcg3/src/cg-proc -t biprefs.nob-nno.rlx.bin |cg-conv
# [<STREAMCMD:SETVAR:forskjell_skilnad,samd_einig>]
# "<forskjell>" n m sg ind
#         "skilnad" n m sg ind SELECT:12:forskjell_skilnad
#         "¬forskjell" n m sg ind SELECT:12:forskjell_skilnad
# "<enig>" adj sint pst nt sg ind
#         "einig" adj sint pst nt sg ind SELECT:15:samd_einig
#         "¬samd" adj sint pst nt sg ind SELECT:15:samd_einig
